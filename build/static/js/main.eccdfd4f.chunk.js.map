{"version":3,"sources":["fbase.js","routes/Auth.js","routes/Home.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","Auth","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","type","placeholder","required","onClick","prev","Home","AppRouter","isLoggedIn","exact","path","App","init","setInit","setIsLoggedIn","useEffect","onAuthStateChanged","user","Date","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAaAA,IAASC,cAVc,CACnBC,OAAQC,6CACRC,WAAYD,mCACZE,YAAaF,uDACbG,UAAWH,oBACXI,cAAeJ,+BACfK,kBAAmBL,kBACnBM,MAAON,iDAKJ,IAAMO,EAAmBV,IAEnBW,EAAcX,IAASY,OCwErBC,EAtFF,WAAO,IAAD,EACSC,mBAAS,IADlB,mBACVC,EADU,KACHC,EADG,OAEeF,mBAAS,IAFxB,mBAEVG,EAFU,KAEAC,EAFA,OAGmBJ,oBAAS,GAH5B,mBAGVK,EAHU,KAGEC,EAHF,OAISN,mBAAS,IAJlB,mBAIVO,EAJU,KAIHC,EAJG,KAKXC,EAAW,SAACC,GAAW,IAAD,EAGtBA,EADFC,OAAUC,EAFc,EAEdA,KAAMC,EAFQ,EAERA,MAEL,UAATD,EACFV,EAASW,GACS,aAATD,GACTR,EAAYS,IAGVC,EAAQ,uCAAG,WAAOJ,GAAP,eAAAK,EAAA,yDACfL,EAAMM,iBADS,UAITX,EAJS,gCAKER,EAAYoB,+BACvBhB,EACAE,GAPS,OAKXe,EALW,+CAUErB,EAAYsB,2BAA2BlB,EAAOE,GAVhD,QAUXe,EAVW,eAYbE,QAAQC,IAAIH,GAZC,kDAcbV,EAAS,KAAMc,SAdF,0DAAH,sDAkBRC,EAAa,uCAAG,WAAOb,GAAP,mBAAAK,EAAA,4DAKL,YAHDH,EACRF,EADFC,OAAUC,MAIVY,EAAW,IAAI5B,EAAiBE,KAAK2B,mBACnB,WAATb,IACTY,EAAW,IAAI5B,EAAiBE,KAAK4B,oBARrB,SAUC7B,EAAY8B,gBAAgBH,GAV7B,OAUZN,EAVY,OAWlBE,QAAQC,IAAI,qBAAsBH,GAXhB,2CAAH,sDAanB,OACE,gCACE,uBAAMJ,SAAUA,EAAhB,UACE,uBACEF,KAAK,QACLgB,KAAK,QACLC,YAAY,QACZC,UAAQ,EACRjB,MAAOZ,EACPQ,SAAUA,IAEZ,uBACEG,KAAK,WACLgB,KAAK,WACLC,YAAY,WACZC,UAAQ,EACRjB,MAAOV,EACPM,SAAUA,IAEZ,uBACEmB,KAAK,SACLf,MAAOR,EAAa,iBAAmB,YAExCE,KAEH,sBAAMwB,QAvCY,kBAAMzB,GAAc,SAAC0B,GAAD,OAAWA,MAuCjD,SACG3B,EAAa,UAAY,mBAE5B,gCACE,wBAAQ0B,QAASR,EAAeX,KAAK,SAArC,kCAGA,wBAAQmB,QAASR,EAAeX,KAAK,SAArC,yCC9EOqB,EADF,kBAAM,yCCsBJC,EAnBG,SAAC,GAAoB,IAAjBC,EAAgB,EAAhBA,WACpB,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACGA,EACC,mCACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,QAIJ,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,WCQGC,MArBf,WAAgB,IAAD,EACWtC,oBAAS,GADpB,mBACNuC,EADM,KACAC,EADA,OAEuBxC,oBAAS,GAFhC,mBAENmC,EAFM,KAEMM,EAFN,KAab,OAVAC,qBAAU,WACR7C,EAAY8C,oBAAmB,SAACC,GAE5BH,IADEG,GAKJJ,GAAQ,QAET,IAED,qCACGD,EAAO,cAAC,EAAD,CAAWJ,WAAYA,IAAiB,kBAChD,4CAAgB,IAAIU,MAAOC,cAA3B,kBChBNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.eccdfd4f.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n    appId: process.env.REACT_APP_APP_ID,\n  };\n\nfirebase.initializeApp(firebaseConfig);\n  \nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();","import React, { useState } from \"react\";\nimport { authService, firebaseInstance } from \"fbase\";\n\nconst Auth = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  const onSocialClick = async (event) => {\n      const {\n        target: { name },\n      } = event;\n      let provider;\n      if (name === \"google\") {\n        provider = new firebaseInstance.auth.GoogleAuthProvider();\n      } else if (name === \"github\") {\n        provider = new firebaseInstance.auth.GithubAuthProvider();\n      }\n      const data = await authService.signInWithPopup(provider);\n      console.log(\"socialLoggedUser: \", data);\n  };\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n        />\n        <input\n          type=\"submit\"\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\n        />\n        {error}\n      </form>\n      <span onClick={toggleAccount}>\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n      <div>\n        <button onClick={onSocialClick} name=\"google\">\n          Continue with Google\n        </button>\n        <button onClick={onSocialClick} name=\"github\">\n          Continue with Github\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;","import React from \"react\";\n\nconst Home = () => <span>Home</span>;\nexport default Home;","import React, { useState } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\n\nconst AppRouter = ( { isLoggedIn}) => {\n  return (\n    <Router>\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n          </>\n        ) : (\n          <Route exact path=\"/\">\n            <Auth />\n          </Route>\n        )}\n      </Switch>\n    </Router>\n  );\n};\nexport default AppRouter;","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n  return (\n    <>\n      {init ? <AppRouter isLoggedIn={isLoggedIn} /> : \"Initializing...\"}\n      <footer>&copy; {new Date().getFullYear()} Nwitter</footer>\n    </>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}